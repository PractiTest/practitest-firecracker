<testsuite name="rspec" tests="427" skipped="49" failures="0" errors="0" time="196.310398" timestamp="2019-12-01T16:01:02+00:00" hostname="db22859b8231">
<properties>
<property name="seed" value="32668"/>
</properties>
<testcase classname="spec.models.suite_spec" name="Suite estimate duration basic test sum" file="./spec/models/suite_spec.rb" time="3.024300"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite estimate duration works nicely with et" file="./spec/models/suite_spec.rb" time="2.772604"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite estimate duration works nicely with mix of et and tests" file="./spec/models/suite_spec.rb" time="2.617466"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite aggregations begins with no run steps" file="./spec/models/suite_spec.rb" time="1.431366"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite aggregations aggregates steps of when there&apos;s a step that ran" file="./spec/models/suite_spec.rb" time="1.604980"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite aggregations aggregates steps of last run for each instance only" file="./spec/models/suite_spec.rb" time="1.716820"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite undo gets back to previous display_name" file="./spec/models/suite_spec.rb" time="1.294607"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite undo updates tags" file="./spec/models/suite_spec.rb" time="1.340902"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite undo reset counter cache (of instances)" file="./spec/models/suite_spec.rb" time="1.585324"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite undo does not Restore previuosly deleted instances" file="./spec/models/suite_spec.rb" time="1.623783"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite undo does not rollback previously deleted instances" file="./spec/models/suite_spec.rb" time="1.979760"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite undo restores TestSet&apos;s last run and status where the first test instance is scripted and two ones are ET (stage: Issue #1286)" file="./spec/models/suite_spec.rb" time="1.881611"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email it has no duplicates, low level test" file="./spec/models/suite_spec.rb" time="1.279742"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email does not record current user, low level test" file="./spec/models/suite_spec.rb" time="1.648604"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email gets multi values - option 1" file="./spec/models/suite_spec.rb" time="1.199007"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email gets multi values - option 2" file="./spec/models/suite_spec.rb" time="1.165639"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email gets multi values - option 2 - when we also have delete_action" file="./spec/models/suite_spec.rb" time="1.678181"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email gets multi values - option 3" file="./spec/models/suite_spec.rb" time="1.178607"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email knows also saves delete actions right" file="./spec/models/suite_spec.rb" time="2.243837"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email it delete action has no duplicates, low level test" file="./spec/models/suite_spec.rb" time="1.767255"></testcase>
<testcase classname="spec.models.suite_spec" name="Suite digest email it add_delete for 4 entities and from different users" file="./spec/models/suite_spec.rb" time="3.264706"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController deletes an instance properly" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.622499"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController show shows correctly" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.493149"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController show handles correctly bad project id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.435149"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController show handles correctly bad id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.477838"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index bad handles correctly bad project id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.390522"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index bad handles correctly filter is missing" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.390441"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good get pagination right" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.560347"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with set_ids" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.577829"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with multiple set_ids" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.586807"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with display_id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.591812"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with display_ids and name" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.591597"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with TestSet filters no current_id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.756337"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with TestSet filters with current_id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.825872"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with test-ids filter" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.568968"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with name exact filter" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.665091"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with name like filter" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.678319"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController index good works with name like filter with combination of set_ids" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.587025"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update assigned-to-id, system fields sends a bad user-id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.459764"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update assigned-to-id, system fields sends a good user-id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.465951"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update assigned-to-id, system fields updates priority" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.490381"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update assigned-to-id, system fields updates priority and assigned-to-id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.484381"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update assigned-to-id, system fields it does not update a bad planned_execution" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.480280"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update assigned-to-id, system fields it updates a good planned_execution" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.529051"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields cannot update a custom field that does not exist" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.464633"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields handles well user field" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.475454"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields raise an error when the user field is bad" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.452500"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields handles well a mandatory text field - no input" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.474168"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields handles well a mandatory text field - with input" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.473391"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields update list field" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.461904"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields updates a multlist field" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.456984"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields updates a number and date field" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.538773"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController update custom fields accepts time and saves only date part" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.449868"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController Create a new instance (via post) misses set-id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.455755"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController Create a new instance (via post) bad test-id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.426933"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController Create a new instance (via post) creates a new instance with system field" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.463834"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController Create multiple instances creates two instances" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.465114"></testcase>
<testcase classname="spec.controllers.api.v2.instances_controller_spec" name="Api::V2::InstancesController Create multiple instances one bad test id" file="./spec/controllers/api/v2/instances_controller_spec.rb" time="0.449371"></testcase>
<testcase classname="spec.controllers.import_controller_spec" name="ImportController new includes the new preconditins field" file="./spec/controllers/import_controller_spec.rb" time="19.650186"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController show shows correctly" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.484475"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController show shows correctly with tags" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.520396"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController show shows linked entities" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.551733"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController show handles correctly bad id" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.482171"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - bad parameters handles correctly bad display-ids" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.447553"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - bad parameters handles correctly bad filter-id" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.450535"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - bad parameters handles correctly bad filter-user-id" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.453062"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - good parameters gets latest tests" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.411595"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - good parameters works well with pagination" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.826421"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - good parameters works well with pagination and filters" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.881120"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - good parameters works with TestSet filters with current_id" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.605918"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - good parameters handles correctly filter is missing" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.455356"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController index - good parameters shows tags when needed" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.485508"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController create works well, create a simple test" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.453509"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController create try to upload a test with good user fields" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.513653"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController create works with steps" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.461491"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController create handles well bad steps (hash instead of an array)" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.441401"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController create handles well no author-id" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.472932"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController create try to upload a test with bad project id" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.436968"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController create try to upload a test with a bad user field" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.455200"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController update updates properly" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.462200"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController update does no update author-id" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.545680"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController destroy destroys properly" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.475410"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController destroy cannot destroy test from a different account or project" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.850861"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController run status count works1" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.437305"></testcase>
<testcase classname="spec.controllers.api.v2.qtests_controller_spec" name="Api::V2::QtestsController run status count works2" file="./spec/controllers/api/v2/qtests_controller_spec.rb" time="0.705540"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController destroys properly" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.542757"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController show shows correctly" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.507084"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController show handles correctly bad id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.508119"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - bad parameters handles correctly bad display-ids" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.476182"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - bad parameters handles correctly bad filter-id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.462682"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - bad parameters handles correctly bad filter-user-id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.469804"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - good parameters gets latest requirements" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.504607"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - good parameters works well with pagination" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.741021"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - good parameters works well with pagination and filters" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.913232"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - good parameters works with TestSet filters with current_id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.596520"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController index - good parameters handles correctly filter is missing" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.412515"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create works well, create a simple requirement" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.432800"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create try to upload a requirement with good user fields" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.470050"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create creates with traceability tests -&gt; NO RUN" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.466284"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create creates with traceability tests -&gt; STARTED" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.449876"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create works with parent-id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.456518"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create hanles bad parent-id (from a different project)" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.833407"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create handles well no author-id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.428129"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create try to upload a requirement with bad project id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.429580"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController create try to upload a test with a bad user field" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.414619"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController update updates properly" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.444592"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController update works well with tags" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.437840"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController update works well with no list for tags" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.423160"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController update works well with commas inside tags" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.409883"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController update does not update author-id" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.466048"></testcase>
<testcase classname="spec.controllers.api.v2.requirements_controller_spec" name="Api::V2::RequirementsController linked entities returns linked issues" file="./spec/controllers/api/v2/requirements_controller_spec.rb" time="0.471981"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController destroys properly" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.514520"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController show shows correctly" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.502435"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController show handles correctly bad id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.458716"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController index - bad parameters handles correctly bad display-ids" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.480221"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController index - bad parameters handles correctly bad filter-id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.449384"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController index - bad parameters handles correctly bad filter-user-id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.442364"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController index - good parameters gets latest issues" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.427727"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController index - good parameters works well with pagination" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.725667"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController index - good parameters works well with pagination and filters" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="1.211659"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController index - good parameters handles correctly filter is missing" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.458734"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController create works well, create a simple issue" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.483760"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController create try to upload an issue with good user fields" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.465633"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController create handles well no author-id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.475914"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController create try to upload an issue with bad project id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.412805"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController create try to upload an issue with a bad user field" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.432783"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update updates properly" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.466702"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update does not update author-id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.493109"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update-status does not update without user-id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.447351"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update-status does not update with a bad user-id" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.446958"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update-status does not update status unless there&apos;s the right transition to the user" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.463058"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update-status requires status name attribute" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.434037"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update-status does not update status with no exists status name" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.464794"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController update-status updates status properly and updates the history" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.442975"></testcase>
<testcase classname="spec.controllers.api.v2.issues_controller_spec" name="Api::V2::IssuesController linked entities returns linked issues" file="./spec/controllers/api/v2/issues_controller_spec.rb" time="0.508345"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController destroys properly" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.437291"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController show shows correctly" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.410085"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController show shows correctly with tags" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.456948"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController show handles correctly bad id" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.411973"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - good parameters gets latest tests" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.428104"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - good parameters works well with pagination" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.535486"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - good parameters works well with pagination and filters" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.679970"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - good parameters works with TestSet filters with current_id" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.567499"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - good parameters handles correctly filter is missing" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.431723"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - bad parameters handles correctly bad display-ids" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.486268"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - bad parameters handles correctly bad filter-id" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.445749"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController index - bad parameters handles correctly bad filter-user-id" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.453756"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create works well, create a simple test" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.448980"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create works well with tags" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.442047"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create works well with no list for tags" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.459879"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create works well with commas inside tags" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.509553"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create try to upload a suite with good user fields" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.529090"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create  with instances" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.519443"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create handles well no name" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.464428"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController create try to upload a suite with bad project id" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.438886"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController update updates properly" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.431392"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController update empty name" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.440528"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController clones a suite clones right" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.471674"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController clones a suite clones and update fields" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.475527"></testcase>
<testcase classname="spec.controllers.api.v2.suites_controller_spec" name="Api::V2::SuitesController clones a suite does not clone bad id" file="./spec/controllers/api/v2/suites_controller_spec.rb" time="0.482426"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView is a user_specific view " file="./spec/models/custom_view_spec.rb" time="0.418942"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView is not a user_specific view" file="./spec/models/custom_view_spec.rb" time="0.418627"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView is not a user_specific view, but its parent is" file="./spec/models/custom_view_spec.rb" time="0.411763"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView filter by tag" file="./spec/models/custom_view_spec.rb" time="0.468596"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView should filter by custom view with multiple custom filters" file="./spec/models/custom_view_spec.rb" time="1.745805"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView name - characters cannot have bad characters" file="./spec/models/custom_view_spec.rb" time="0.398001"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView name - characters can have japanese chars" file="./spec/models/custom_view_spec.rb" time="0.366145"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView name - characters can have spaces and number chars and &amp; and /" file="./spec/models/custom_view_spec.rb" time="0.393743"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView name - characters cannot have xss" file="./spec/models/custom_view_spec.rb" time="0.394206"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView name - characters can have @ for emails" file="./spec/models/custom_view_spec.rb" time="0.377351"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView filters - AND &amp; OR (checking in custom views) filter by list - OR" file="./spec/models/custom_view_spec.rb" time="0.750393"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView filters - AND &amp; OR (checking in custom views) filter by list - AND" file="./spec/models/custom_view_spec.rb" time="0.713286"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView filters - AND &amp; OR (checking in custom views) filter by multilist - OR" file="./spec/models/custom_view_spec.rb" time="0.709387"></testcase>
<testcase classname="spec.models.custom_view_spec" name="CustomView filters - AND &amp; OR (checking in custom views) filter by multilist - AND" file="./spec/models/custom_view_spec.rb" time="0.708042"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController index get pagination right" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.767173"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController index gets the right data" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.402935"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController show gets a good one" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.381722"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController show show a custom field with possible-values right" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.396091"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController show handles right custom_field not found" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.378933"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update -&gt; good no errors updates correctly name" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.379566"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update -&gt; good no errors updates correctly possible-values" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.384821"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update -&gt; good no errors updates correctly possible-values for linkedlist" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.374558"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update -&gt; good no errors updates correctly possible-values for linkedlist, with some empty values" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.372395"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update -&gt; good no errors updates correctly parent-list-id" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.387177"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update -&gt; good no errors updates correctly possible-values-parent-cf-id" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.373290"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update - bad with errors handles right when custom_field is not found" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.385035"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update - bad with errors validates put has a data attribute" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.389194"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update - bad with errors validates put has attributes parameter" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.375342"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update - bad with errors cannot update parent-list-id for non linked-list" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.372481"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update - bad with errors cannot update possible-values-parent-cf-id for non project custom field" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.728069"></testcase>
<testcase classname="spec.controllers.api.v2.custom_fields_controller_spec" name="Api::V2::CustomFieldsController update - bad with errors cannot update possible-values-parent-cf-id non list" file="./spec/controllers/api/v2/custom_fields_controller_spec.rb" time="0.368653"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with new gets right fields for new issue" file="./spec/controllers/custom_views_controller_spec.rb" time="0.459759"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with new gets right fields for new testset" file="./spec/controllers/custom_views_controller_spec.rb" time="0.411965"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with new gets right fields for new test" file="./spec/controllers/custom_views_controller_spec.rb" time="0.434443"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with new gets right fields for new test" file="./spec/controllers/custom_views_controller_spec.rb" time="0.446514"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with existing filter gets custom fields for edit issue" file="./spec/controllers/custom_views_controller_spec.rb" time="0.483455"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with existing filter gets custom fields for edit testset" file="./spec/controllers/custom_views_controller_spec.rb" time="0.488431"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with existing filter gets custom fields for edit requirement" file="./spec/controllers/custom_views_controller_spec.rb" time="0.470957"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with existing filter gets custom fields for edit test" file="./spec/controllers/custom_views_controller_spec.rb" time="0.512728"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with existing filter validate selected fields are available fields" file="./spec/controllers/custom_views_controller_spec.rb" time="0.667716"></testcase>
<testcase classname="spec.controllers.custom_views_controller_spec" name="CustomViewsController checks filters with existing filter validate fields of parent available" file="./spec/controllers/custom_views_controller_spec.rb" time="0.930458"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail works okay for professional - new account" file="./spec/models/account/payment_detail_spec.rb" time="0.616997"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail works okay for enterprise" file="./spec/models/account/payment_detail_spec.rb" time="0.583722"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail works okay with charge_from" file="./spec/models/account/payment_detail_spec.rb" time="0.607948"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail full_details_internal works like charm! also old accounts payment details are now working with new pricing" file="./spec/models/account/payment_detail_spec.rb" time="0.586454"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail with discount works with regular discount" file="./spec/models/account/payment_detail_spec.rb" time="0.585653"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail with discount works with negative discount (if we want to charge more on Enterprise)" file="./spec/models/account/payment_detail_spec.rb" time="0.610488"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail Minimum charge tests works okay with Minimum charge" file="./spec/models/account/payment_detail_spec.rb" time="0.641077"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail Minimum charge tests works okay with Minimum and portion of month (no minimum should be applied)" file="./spec/models/account/payment_detail_spec.rb" time="0.607723"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail Minimum charge tests works okay with Minimum and portion of month (minimum should be applied)" file="./spec/models/account/payment_detail_spec.rb" time="0.589833"></testcase>
<testcase classname="spec.models.account.payment_detail_spec" name="Account::PaymentDetail Minimum charge tests works ok with minimum charge if subsciption was cancelled" file="./spec/models/account/payment_detail_spec.rb" time="0.604357"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest validations valid when it does not call itself nor round" file="./spec/models/call_to_test_spec.rb" time="0.421252"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest validations does not call itself" file="./spec/models/call_to_test_spec.rb" time="0.417232"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest validations does not let circular dependencies" file="./spec/models/call_to_test_spec.rb" time="0.407465"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest load new steps new test has 0 step containers" file="./spec/models/call_to_test_spec.rb" time="0.401063"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest load new steps loads steps via new_attributes method - not valid" file="./spec/models/call_to_test_spec.rb" time="0.415518"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest load new steps loads steps via new_attributes method - valid valid" file="./spec/models/call_to_test_spec.rb" time="0.464668"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest deletes tests properly deletes the called test and it cleaned the one who calls it" file="./spec/models/call_to_test_spec.rb" time="0.462728"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest deletes tests properly deletes the called test to multiple parent tests" file="./spec/models/call_to_test_spec.rb" time="0.450870"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest deletes tests properly deletes the calling test, and it cleans the call to tests" file="./spec/models/call_to_test_spec.rb" time="0.451149"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest clone Tests with CTT clones properly within the project" file="./spec/models/call_to_test_spec.rb" time="0.484012"></testcase>
<testcase classname="spec.models.call_to_test_spec" name="CallToTest clone Tests with CTT clones properly to another test (creating it with steps)" file="./spec/models/call_to_test_spec.rb" time="0.868017"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder Call To Test with steps params finder test1 has all parameters, before and after" file="./spec/libs/steps_params/finder_spec.rb" time="0.454409"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder Call To Test with steps params finder test 1 &amp; 2 is exactly like test1 (which includes test2)" file="./spec/libs/steps_params/finder_spec.rb" time="0.415140"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder Call To Test with steps params finder test2 has only its params" file="./spec/libs/steps_params/finder_spec.rb" time="0.417065"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder compute_all_params -&gt; with empty values test2 has only its params" file="./spec/libs/steps_params/finder_spec.rb" time="0.396235"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder steps params finder -&gt; in complex query irrelated to CTT has all parameters" file="./spec/libs/steps_params/finder_spec.rb" time="0.414487"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder steps params finder -&gt; in complex query irrelated to CTT brings uniq params only" file="./spec/libs/steps_params/finder_spec.rb" time="0.399884"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder includes_all_params? method returns false for instance with no parameters" file="./spec/libs/steps_params/finder_spec.rb" time="0.384760"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder includes_all_params? method returns false for instance with some parameters" file="./spec/libs/steps_params/finder_spec.rb" time="0.388385"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder includes_all_params? method returns false for instance with all parameters but some are empty strings" file="./spec/libs/steps_params/finder_spec.rb" time="0.397883"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder includes_all_params? method returns false for instance with all parameters but some are nil" file="./spec/libs/steps_params/finder_spec.rb" time="0.380312"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder includes_all_params? method retuns true for instance with all params" file="./spec/libs/steps_params/finder_spec.rb" time="0.395357"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder includes_all_params? method returns true for instance with all params + some other irrelevant params" file="./spec/libs/steps_params/finder_spec.rb" time="0.383551"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder includes_all_params? method returns true for instance with all params + some other irrelevant params are nil" file="./spec/libs/steps_params/finder_spec.rb" time="0.394238"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder validates parameters_replacer method replaces well when we have all params" file="./spec/libs/steps_params/finder_spec.rb" time="0.000693"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder validates parameters_replacer method replaces well when we have extra params" file="./spec/libs/steps_params/finder_spec.rb" time="0.000554"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder validates parameters_replacer method raises an exception when one param is missing" file="./spec/libs/steps_params/finder_spec.rb" time="0.002594"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder validates parameters_replacer method raises an exception when we have nil" file="./spec/libs/steps_params/finder_spec.rb" time="0.000556"></testcase>
<testcase classname="spec.libs.steps_params.finder_spec" name="StepsParams::Finder validates parameters_replacer method raises an exception when we have are blank params" file="./spec/libs/steps_params/finder_spec.rb" time="0.000542"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue issue status start with status_name new as default" file="./spec/models/issue_spec.rb" time="0.725574"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue issue status shows the relevant next statuses" file="./spec/models/issue_spec.rb" time="0.752886"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue custom fields -&gt; scope saves and loads the custom field" file="./spec/models/issue_spec.rb" time="0.396629"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue custom fields -&gt; scope scopes where custom field is (value)" file="./spec/models/issue_spec.rb" time="0.388929"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue custom fields -&gt; scope scopes where custom field is NOT (value)" file="./spec/models/issue_spec.rb" time="0.414505"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue custom fields -&gt; scope scopes where custom field is empty" file="./spec/models/issue_spec.rb" time="0.397545"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue custom fields -&gt; scope scopes where custom field is NOT empty" file="./spec/models/issue_spec.rb" time="0.413265"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue issues_transitions_summary_log begins with new" file="./spec/models/issue_spec.rb" time="0.433170"></testcase>
<testcase classname="spec.models.issue_spec" name="Issue issues_transitions_summary_log works when adding an issue now." file="./spec/models/issue_spec.rb" time="0.487466"></testcase>
<testcase classname="spec.controllers.integrations.integration_migration_spec" name="Project::IntegrationMigration migration should convert IntegrationIssue objects to Issue object" file="./spec/controllers/integrations/integration_migration_spec.rb" time="4.148320"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant enablement adds relevant fields, only once" file="./spec/models/project/integration_eggplant_spec.rb" time="0.396354"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant enablement updates automation meta field" file="./spec/models/project/integration_eggplant_spec.rb" time="0.385901"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant enablement adds hook" file="./spec/models/project/integration_eggplant_spec.rb" time="0.385671"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant enablement does not display the eggplant hook" file="./spec/models/project/integration_eggplant_spec.rb" time="0.000008"><skipped/></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant enablement adds relevant api token" file="./spec/models/project/integration_eggplant_spec.rb" time="0.402364"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant enablement check when enabled properly" file="./spec/models/project/integration_eggplant_spec.rb" time="0.375843"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant enablement validates not professional" file="./spec/models/project/integration_eggplant_spec.rb" time="0.368356"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant disable disables right" file="./spec/models/project/integration_eggplant_spec.rb" time="0.389118"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant disable does not remove custom fields when disabling" file="./spec/models/project/integration_eggplant_spec.rb" time="0.392184"></testcase>
<testcase classname="spec.models.project.integration_eggplant_spec" name="Project::IntegrationEggplant Eggplant disable disables when account becomes professional" file="./spec/models/project/integration_eggplant_spec.rb" time="0.386264"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController show shows correctly" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.392661"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController show handles correctly bad id" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.370456"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController index get pagination right" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.728992"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController index shows all projects" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.724179"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController index shows no data, when pagination is out" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.925553"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController authentication, format, etc does not have a valid json format" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.003845"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController authentication, format, etc does not use basic auth right" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.004683"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController authentication, format, etc does not have a valid developer email" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.004726"></testcase>
<testcase classname="spec.controllers.api.v2.projects_controller_spec" name="Api::V2::ProjectsController authentication, format, etc does not have a valid api token" file="./spec/controllers/api/v2/projects_controller_spec.rb" time="0.003720"></testcase>
<testcase classname="spec.models.issues_step_run_spec" name="IssuesStepRun issue step run count starts with zero count" file="./spec/models/issues_step_run_spec.rb" time="0.779030"></testcase>
<testcase classname="spec.models.issues_step_run_spec" name="IssuesStepRun issue step run count adds another count when we add" file="./spec/models/issues_step_run_spec.rb" time="0.812881"></testcase>
<testcase classname="spec.models.issues_step_run_spec" name="IssuesStepRun issue step run count delete count when we delete" file="./spec/models/issues_step_run_spec.rb" time="0.854425"></testcase>
<testcase classname="spec.models.issues_step_run_spec" name="IssuesStepRun issue step run count delete count when we decouple IssuesStepRun" file="./spec/models/issues_step_run_spec.rb" time="0.813501"></testcase>
<testcase classname="spec.libs.status_tracker_spec" name="StatusTracker starting point works with scope run_status_archive_to_update" file="./spec/libs/status_tracker_spec.rb" time="0.437438"></testcase>
<testcase classname="spec.libs.status_tracker_spec" name="StatusTracker starting point scopes well with run_status_archive_updated" file="./spec/libs/status_tracker_spec.rb" time="0.436026"></testcase>
<testcase classname="spec.libs.status_tracker_spec" name="StatusTracker starting point instances with NO RUN values" file="./spec/libs/status_tracker_spec.rb" time="0.429796"></testcase>
<testcase classname="spec.libs.status_tracker_spec" name="StatusTracker calculations with changes calculates run_status_archive with no change" file="./spec/libs/status_tracker_spec.rb" time="0.439406"></testcase>
<testcase classname="spec.libs.status_tracker_spec" name="StatusTracker calculations with changes calculates run_status_archive with change 45 days ago" file="./spec/libs/status_tracker_spec.rb" time="0.426805"></testcase>
<testcase classname="spec.libs.status_tracker_spec" name="StatusTracker calculations with changes calculates run_status_archive with change 5 days ago" file="./spec/libs/status_tracker_spec.rb" time="0.449523"></testcase>
<testcase classname="spec.models.qtest_design_spec" name="Issue cloning of QtestDesign (Test) KanbanLane clones Test within the project" file="./spec/models/qtest_design_spec.rb" time="0.807024"></testcase>
<testcase classname="spec.models.qtest_design_spec" name="Issue cloning of QtestDesign (Test) KanbanLane clones Test to another project" file="./spec/models/qtest_design_spec.rb" time="0.795597"></testcase>
<testcase classname="spec.models.qtest_design_spec" name="Issue cloning of QtestDesign (Test) KanbanLane clones Test to a new project - need to keep position" file="./spec/models/qtest_design_spec.rb" time="0.851490"></testcase>
<testcase classname="spec.libs.steps_params.instance_updater_spec" name="StepsParams::InstanceUpdater Instance Updater update each relevant instance with the right relevant paremeter updates an instance" file="./spec/libs/steps_params/instance_updater_spec.rb" time="0.509160"></testcase>
<testcase classname="spec.libs.steps_params.instance_updater_spec" name="StepsParams::InstanceUpdater Instance Updater update each relevant instance with the right relevant paremeter updates two instances, every one with the right params" file="./spec/libs/steps_params/instance_updater_spec.rb" time="0.508250"></testcase>
<testcase classname="spec.libs.steps_params.instance_updater_spec" name="StepsParams::InstanceUpdater Instance Updater update each relevant instance with the right relevant paremeter updates instance that has empty mandatory fields" file="./spec/libs/steps_params/instance_updater_spec.rb" time="0.522168"></testcase>
<testcase classname="spec.controllers.account.accounts_controller_spec" name="Account::AccountsController accounts update license_type should assign to Professional" file="./spec/controllers/account/accounts_controller_spec.rb" time="0.401327"></testcase>
<testcase classname="spec.controllers.account.accounts_controller_spec" name="Account::AccountsController accounts update license_type should not assign to Unlimited" file="./spec/controllers/account/accounts_controller_spec.rb" time="0.400068"></testcase>
<testcase classname="spec.controllers.account.accounts_controller_spec" name="Account::AccountsController accounts update license_type it should disable Enterprise features" file="./spec/controllers/account/accounts_controller_spec.rb" time="0.434593"></testcase>
<testcase classname="spec.models.project_spec" name="Project Project System fields check has the relevant System Fields when we start" file="./spec/models/project_spec.rb" time="0.381916"></testcase>
<testcase classname="spec.models.project_spec" name="Project Project System fields check gets the issue_priority_field" file="./spec/models/project_spec.rb" time="0.369785"></testcase>
<testcase classname="spec.models.project_spec" name="Project Project System fields check works with included_sf? method" file="./spec/models/project_spec.rb" time="0.371149"></testcase>
<testcase classname="spec.controllers.api.v2.groups_controller_spec" name="Api::V2::GroupsController index shows all groups of the project" file="./spec/controllers/api/v2/groups_controller_spec.rb" time="0.428305"></testcase>
<testcase classname="spec.controllers.api.v2.groups_controller_spec" name="Api::V2::GroupsController show shows a group" file="./spec/controllers/api/v2/groups_controller_spec.rb" time="0.412154"></testcase>
<testcase classname="spec.models.system_field_spec" name="SystemField Database Column name should return the right db_column name for each system field" file="./spec/models/system_field_spec.rb" time="0.395208"></testcase>
<testcase classname="spec.models.system_field_spec" name="SystemField Database Column name returns the right db_column name via self.db_name" file="./spec/models/system_field_spec.rb" time="0.374345"></testcase>
<testcase classname="spec.models.dashboard_spec" name="Dashboard distribution table should have correct counts in issues distribution table" file="./spec/models/dashboard_spec.rb" time="0.597995"></testcase>
<testcase classname="spec.controllers.signups_controller_spec" name="SignupsController create registers a user with a country" file="./spec/controllers/signups_controller_spec.rb" time="0.391647"></testcase>
<testcase classname="spec.controllers.signups_controller_spec" name="SignupsController create does not register with a bad code" file="./spec/controllers/signups_controller_spec.rb" time="0.002625"></testcase>
<testcase classname="spec.models.customizable_spec" name="Issue It Saves a custom field" file="./spec/models/customizable_spec.rb" time="0.382899"></testcase>
<testcase classname="spec.models.user_spec" name="User display name formatter cannot have bad characters" file="./spec/models/user_spec.rb" time="0.005516"></testcase>
<testcase classname="spec.models.user_spec" name="User display name formatter will not able to bypass on create when display_name isn&apos;t null" file="./spec/models/user_spec.rb" time="0.003923"></testcase>
<testcase classname="spec.models.user_spec" name="User display name formatter can have japanese chars" file="./spec/models/user_spec.rb" time="0.004536"></testcase>
<testcase classname="spec.models.user_spec" name="User display name formatter can have spaces and number chars and &amp; and /" file="./spec/models/user_spec.rb" time="0.004509"></testcase>
<testcase classname="spec.models.user_spec" name="User display name formatter cannot have xss" file="./spec/models/user_spec.rb" time="0.005492"></testcase>
<testcase classname="spec.models.user_spec" name="User display name formatter can have @ and - for emails" file="./spec/models/user_spec.rb" time="0.004570"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support validate large password" file="./spec/models/user_spec.rb" time="0.005706"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support does not approve not complex password" file="./spec/models/user_spec.rb" time="0.005229"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support does not approve password without special chars" file="./spec/models/user_spec.rb" time="0.005081"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support does not approve password without digit" file="./spec/models/user_spec.rb" time="0.005060"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support does not approve password without uppercase" file="./spec/models/user_spec.rb" time="0.005392"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char {" file="./spec/models/user_spec.rb" time="0.004741"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char ^" file="./spec/models/user_spec.rb" time="0.004734"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char $" file="./spec/models/user_spec.rb" time="0.004841"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char *" file="./spec/models/user_spec.rb" time="0.004933"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char ." file="./spec/models/user_spec.rb" time="0.004781"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char [" file="./spec/models/user_spec.rb" time="0.004755"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char ]" file="./spec/models/user_spec.rb" time="0.004758"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char {" file="./spec/models/user_spec.rb" time="0.004824"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char }" file="./spec/models/user_spec.rb" time="0.004820"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char (" file="./spec/models/user_spec.rb" time="0.004461"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char )" file="./spec/models/user_spec.rb" time="0.004363"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char ?" file="./spec/models/user_spec.rb" time="0.004249"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char -" file="./spec/models/user_spec.rb" time="0.004398"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char &quot;" file="./spec/models/user_spec.rb" time="0.004281"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char !" file="./spec/models/user_spec.rb" time="0.004294"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char @" file="./spec/models/user_spec.rb" time="0.004248"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char #" file="./spec/models/user_spec.rb" time="0.004155"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char %" file="./spec/models/user_spec.rb" time="0.004310"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char &amp;" file="./spec/models/user_spec.rb" time="0.004677"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char /" file="./spec/models/user_spec.rb" time="0.004436"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char  ," file="./spec/models/user_spec.rb" time="0.004302"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char &gt;" file="./spec/models/user_spec.rb" time="0.004268"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char &lt;" file="./spec/models/user_spec.rb" time="0.004377"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char &apos;" file="./spec/models/user_spec.rb" time="0.004380"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char :" file="./spec/models/user_spec.rb" time="0.004365"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char ;" file="./spec/models/user_spec.rb" time="0.004333"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char |" file="./spec/models/user_spec.rb" time="0.004346"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char _" file="./spec/models/user_spec.rb" time="0.004305"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char ~" file="./spec/models/user_spec.rb" time="0.004385"></testcase>
<testcase classname="spec.models.user_spec" name="User check password validation support approves password with special char `" file="./spec/models/user_spec.rb" time="0.004326"></testcase>
<testcase classname="spec.controllers.plimus_controller_spec" name="PlimusController create ipn handles correctly good ipn post (with new subscriber)" file="./spec/controllers/plimus_controller_spec.rb" time="0.045090"></testcase>
<testcase classname="spec.controllers.plimus_controller_spec" name="PlimusController create ipn handles correctly good old IPN post" file="./spec/controllers/plimus_controller_spec.rb" time="0.028839"></testcase>
<testcase classname="spec.controllers.plimus_controller_spec" name="PlimusController create ipn raises error bad ipn (bad account_id)" file="./spec/controllers/plimus_controller_spec.rb" time="0.005221"></testcase>
<testcase classname="spec.controllers.plimus_controller_spec" name="PlimusController create ipn upgrades IPN counts for manual Bluesnap" file="./spec/controllers/plimus_controller_spec.rb" time="0.028561"></testcase>
<testcase classname="spec.controllers.plimus_controller_spec" name="PlimusController create ipn does not enable regular payment without IPN id" file="./spec/controllers/plimus_controller_spec.rb" time="0.015448"></testcase>
<testcase classname="spec.middleware.api_rate_limit_spec" name="ApiRateLimit no standard api keys should pass non api calls" file="./spec/middleware/api_rate_limit_spec.rb" time="0.000730"></testcase>
<testcase classname="spec.middleware.api_rate_limit_spec" name="ApiRateLimit use api keys should pass without limit" file="./spec/middleware/api_rate_limit_spec.rb" time="0.015588"></testcase>
<testcase classname="spec.middleware.api_rate_limit_spec" name="ApiRateLimit use api keys should stop with limits" file="./spec/middleware/api_rate_limit_spec.rb" time="0.027476"></testcase>
<testcase classname="spec.middleware.api_rate_limit_spec" name="ApiRateLimit use api keys should stop with limits 2 different tokens" file="./spec/middleware/api_rate_limit_spec.rb" time="0.034125"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization English tests returns thursday" file="./spec/helpers/application_helper_spec.rb" time="0.001179"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization English tests returns in mb" file="./spec/helpers/application_helper_spec.rb" time="0.014879"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization English tests 12.hours.ago" file="./spec/helpers/application_helper_spec.rb" time="0.000987"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization German tests returns thursday" file="./spec/helpers/application_helper_spec.rb" time="0.000862"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization German tests returns in mb" file="./spec/helpers/application_helper_spec.rb" time="0.001069"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization German tests 12.hours.ago" file="./spec/helpers/application_helper_spec.rb" time="0.000898"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization Japanese tests returns thursday" file="./spec/helpers/application_helper_spec.rb" time="0.000773"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization Japanese tests returns in mb" file="./spec/helpers/application_helper_spec.rb" time="0.001000"></testcase>
<testcase classname="spec.helpers.application_helper_spec" name="ApplicationHelper internationalization Japanese tests 12.hours.ago" file="./spec/helpers/application_helper_spec.rb" time="0.000875"></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController should accept the right authorization" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000800"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController should accept only JSON" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000627"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Errors with parameters try to upload tests results with bad project id" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000680"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Errors with parameters try to upload tests without test_display_id" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000607"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Errors with parameters try to upload tests results with bad steps&apos; status" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000605"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Errors with parameters try to upload tests results with a file not in array" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000647"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Errors with parameters try to upload test results with instance bad custom user fields" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000615"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters try to upload PASSED tests results" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000655"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters upload PASSED tests results and want back the run_id" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000615"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters try to upload tests results with files" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000608"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters try to upload FAILED tests results" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000616"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters try to upload tests results with blocked Steps" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000655"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters try to upload tests results with FAILED Steps" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000612"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters try to upload test results with run custom fields" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000619"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Upload Tests results Good parameters try to upload test results with instance custom fields" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000595"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Asks for Next Step asks for next step via xml - no tests" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000652"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Asks for Next Step asks for next step via json - no tests" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000642"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Asks for Next Step asks for next test via xml - there&apos;s a test to run" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000611"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.automated_tests_controller_spec" name="Api::V1::AutomatedTestsController Asks for Next Step asks for next test via json - there&apos;s a test to run" file="./spec/controllers/api/v1/automated_tests_controller_spec.rb" time="0.000597"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Posts to /api/tests.json " file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000673"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Posts to /api/tests.json with steps" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000613"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Posts to /api/tests.json with duration_estimate" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000613"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Posts to /api/tests.json with an invalid user id " file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000690"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Gets api/tests.json with an invalid filter_id" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000601"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Gets api/tests.json with a valid filter_id" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000592"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Gets api/tests.json with no tests" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000608"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Gets api/tests.json with 30 tests and paginations" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000603"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController It gets the relevant data via filter definition" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000600"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController It gets the relevant testes via filter id" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000633"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Gets api/tests/run_statuses_count.json with one no run" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000612"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Gets api/tests/run_statuses_count.json with more tests" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000600"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Shows a test via #GET" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000614"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Updates a test" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000610"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Updates a test without a new name in the json" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000598"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController does not able to update a non-existing test" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000636"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController Should not be able to update an issue without a current user" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000616"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.qtest_designs_controller_spec" name="Api::V1::QtestDesignsController deletes a test" file="./spec/controllers/api/v1/qtest_designs_controller_spec.rb" time="0.000608"><skipped/></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring passed if all is passed" file="./spec/models/requirement_spec.rb" time="0.000581"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring NOT COVERED if all is req" file="./spec/models/requirement_spec.rb" time="0.000494"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring no run if all is no run" file="./spec/models/requirement_spec.rb" time="0.000479"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring started if all is no run or passed" file="./spec/models/requirement_spec.rb" time="0.000504"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring started if all is no run or passed" file="./spec/models/requirement_spec.rb" time="0.000483"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring started if all is no run or passed or N/A" file="./spec/models/requirement_spec.rb" time="0.000468"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring started if all is no run or N/A" file="./spec/models/requirement_spec.rb" time="0.000477"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring blocked if all is blocked" file="./spec/models/requirement_spec.rb" time="0.000471"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring blocked if all is blocked or N/A or passed" file="./spec/models/requirement_spec.rb" time="0.000469"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring blocked if all is blocked or passed" file="./spec/models/requirement_spec.rb" time="0.000466"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring blocked if all is blocked or N/A" file="./spec/models/requirement_spec.rb" time="0.000513"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring passed if all is passed" file="./spec/models/requirement_spec.rb" time="0.000472"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring passed if all is passed or N/A" file="./spec/models/requirement_spec.rb" time="0.000481"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring N/A if all is N/A" file="./spec/models/requirement_spec.rb" time="0.000475"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring failed if all is failed" file="./spec/models/requirement_spec.rb" time="0.000469"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring failed if all is failed or no run" file="./spec/models/requirement_spec.rb" time="0.000465"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring failed if all is failed or passed" file="./spec/models/requirement_spec.rb" time="0.000467"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring failed if all is failed or passed or N/A" file="./spec/models/requirement_spec.rb" time="0.000589"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring failed if all is failed or passed or N/A or blocked" file="./spec/models/requirement_spec.rb" time="0.000601"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring failed if all is failed or N/A" file="./spec/models/requirement_spec.rb" time="0.000477"></testcase>
<testcase classname="spec.models.requirement_spec" name="Requirement compute status checks should bring failed if all is failed or blocked" file="./spec/models/requirement_spec.rb" time="0.000483"></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController Shows a requirement via #GET" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000714"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController Updates a requirement" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000617"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController Updates a requirement without a new name in the json" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000649"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController does not able to update a non-existing requirement" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000660"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController Should not be able to update a requirement without a current user" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000634"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController deletes a requirement" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000606"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController Should not create a requirement with no real project" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000609"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.requirements_controller_spec" name="Api::V1::RequirementsController POST - create a new requirement (Create) and requirement SHOW (get)" file="./spec/controllers/api/v1/requirements_controller_spec.rb" time="0.000611"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.exporter_controller_spec" name="Api::V1::ExporterController should accept only with the entity parameter" file="./spec/controllers/api/v1/exporter_controller_spec.rb" time="0.000705"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.exporter_controller_spec" name="Api::V1::ExporterController should have a valid entity name" file="./spec/controllers/api/v1/exporter_controller_spec.rb" time="0.000633"><skipped/></testcase>
<testcase classname="spec.controllers.api.v1.exporter_controller_spec" name="Api::V1::ExporterController Export issues" file="./spec/controllers/api/v1/exporter_controller_spec.rb" time="0.000614"><skipped/></testcase>
</testsuite>
